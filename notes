----------------------------------(Material's Learned)----------
API
REACT Hooks
Local Storage
Context API
React Router DOM v6
Material UI



--------------------------------------------(TMBD API)----------
DOCS: https://developers.themoviedb.org/3/search/search-movies



------------------------------------------(React Hooks/Forms)--------
FreeCodeCamp-Video: https://www.youtube.com/watch?v=8hU0I8rY4u4


------------------------------------------(React Context API)--------
DOCS: https://reactjs.org/docs/hooks-reference.html
When to use: https://reactjs.org/docs/context.html#when-to-use-context

Context API Video: https://www.youtube.com/watch?v=35lXWvCuM8o&t=1015s
Proj Video Reference: https://www.youtube.com/watch?v=1eO_hNYzaSc&t=64s
Article: https://sebhastian.com/react-context-api/

Prop-Drilling-Issue:
Having certain states in the highest parent component and passing it down
would give us the headache of prop drilling when we have 50+ components and we want to
go passing props down to a specific component. With tools like context api and redux we can set global
varaibles for certain data/information like user information or simple storage. 

--------------------------------------(React Hooks)------------
From classes to Hooks DOCS: https://reactjs.org/docs/hooks-faq.html#from-classes-to-hooks

useReducer article: https://alligator.io/react/usereducer/

useReducer:
this hook takes in a state and a reducer function. 

------------------------------------------(React Router Dom)--------
***Redirecting with Navigate component: https://gist.github.com/mjackson/b5748add2795ce7448a366ae8f8ae3bb

The new <Navigate> element in v6 works like a declarative version of the useNavigate() hook. 
It's particularly handy in situations where you need a React element to declare your navigation intent, 
like <Route element>. It also replaces any uses that you had for a <Redirect> element in v5 outside of a <Switch>.
***The <Navigate replace> prop tells the router to use history.replaceState() 
when updating the URL so the / entry won't end up in the history stack.

***Restyling text decoration on Link components with inline styles n double brackets
style={{ textDecoration: 'none' }}


-------------------------------------(Material UI)-----------
Themeing:
DOCS: https://mui.com/customization/theming/
Video: https://www.youtube.com/watch?v=bDkB3LoQKxs


------------------------(Other)-----------

Resetting Local and Remote commits: 
https://www.shellhacks.com/git-remove-all-commits-clear-git-history-local-remote/

Local Storage:
https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage

CSS files: 
Even though the components are not being rendering when they are not on the proper url route,
the css files will still be appended to the html. 